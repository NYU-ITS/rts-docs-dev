"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7992],{4593:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"navigating_the_cluster/hpc_foundations","title":"hpc_foundations","description":"---","source":"@site/docs/navigating_the_cluster/hpc_foundations.md","sourceDirName":"navigating_the_cluster","slug":"/navigating_the_cluster/hpc_foundations","permalink":"/rts-docs-dev/pr-preview/pr-23/docs/navigating_the_cluster/hpc_foundations","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/navigating_the_cluster/hpc_foundations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Linux Tutorial","permalink":"/rts-docs-dev/pr-preview/pr-23/docs/navigating_the_cluster/linux_tutorial"},"next":{"title":"Training and Support","permalink":"/rts-docs-dev/pr-preview/pr-23/docs/training_and_support/"}}');var i=s(6070),o=s(2168);const t={},l=void 0,c={},d=[{value:"toc_max_heading_level: 2\nsidebar_position: 2",id:"toc_max_heading_level-2sidebar_position-2",level:2},{value:"Other File Systems",id:"other-file-systems",level:3},{value:"Running programs on a <code>login</code> node",id:"running-programs-on-a-login-node",level:2}];function h(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"toc_max_heading_level-2sidebar_position-2",children:"toc_max_heading_level: 2\nsidebar_position: 2"}),"\n",(0,i.jsx)(n.h1,{id:"hpc-foundations",children:"HPC Foundations"}),"\n",(0,i.jsxs)(n.p,{children:["The goal of this exercise is to help you understand the fundamentals ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"A to Z"})})," on effecively navigating the cluster for your research or academic projects."]}),"\n",(0,i.jsx)(n.p,{children:"Before we begin this exercise please make sure you have access to the NYU HPC cluster, if not please review the [Accessing HPC page](../accessing_hpc/accessing_hpc.md)."}),"\n",(0,i.jsx)(n.p,{children:"Login to the Greene cluster with ssh at :"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Accessible under NYU Net ( either via VPN or within campus network )"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"greene.hpc.nyu.edu\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Once logged in, you should notice the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"node"})})," which you are currently on from the ",(0,i.jsx)(n.em,{children:"bash prompt"})," as shown below :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-3 ~]$\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Prompts follow the format [",(0,i.jsx)(n.code,{children:"<user_netid>"}),"@",(0,i.jsx)(n.code,{children:"<node_name>"})," ~]. As you can see the node name is ",(0,i.jsx)(n.code,{children:"log-3"})," (i.e. ",(0,i.jsx)(n.code,{children:"login 3"}),") which is a login node. You may have logged in to a different node, NYU HPC maintains over 4 login nodes for load balancing, users may end up on any login node each time, when they ssh to the cluster based on traffic."]}),"\n",(0,i.jsxs)(n.p,{children:["Run the command ",(0,i.jsx)(n.code,{children:"pwd"})," or also known as ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"print working directory"})})," to print your current directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"pwd\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The output will look like ",(0,i.jsx)(n.code,{children:"/home/Net_ID"})," as shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-3 ~]$ pwd\n/home/pp2959\n[pp2959@log-3 ~]$\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This is your linux ",(0,i.jsx)(n.code,{children:"home"})," directory and the ",(0,i.jsx)(n.code,{children:"Net_ID"})," is your linux ",(0,i.jsx)(n.code,{children:"user account name"})," on the cluster."]}),"\n",(0,i.jsxs)(n.p,{children:["The ' ",(0,i.jsxs)(n.em,{children:["/home/",(0,i.jsx)(n.strong,{children:"Net_ID"}),"/"]})," ' is your ",(0,i.jsx)(n.strong,{children:"workspace"})," where you ",(0,i.jsx)(n.strong,{children:"write and maintain your code base"}),". This is a limited space intended for maintaining projects or code bases only, ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"not"})})," for storing large datasets OR installation of software, you will use a different space designed specifically for this."]}),"\n",(0,i.jsxs)(n.p,{children:["If you list the ",(0,i.jsx)(n.code,{children:"/home"})," directory with the ",(0,i.jsx)(n.code,{children:"ls"})," command as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"ls /home\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then you will list ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"all"})})," users of this cluster. These are the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Net_ID"})}),"s Or the linux ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"user accounts"})})," of all users on the cluster."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"/home"})," directory in this case is a ",(0,i.jsx)(n.strong,{children:"shared filesystem"})," mounted across ",(0,i.jsx)(n.strong,{children:"all 4 login nodes"})," on which the user(s) home directories ( like /home/",(0,i.jsx)(n.strong,{children:"User_Net_ID"}),"/ ) are located."]}),"\n",(0,i.jsxs)(n.p,{children:["For instance, create a new empty file with ",(0,i.jsx)(n.code,{children:"touch"})," command on whichever login node you are currently at:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"touch new_file.txt\n"})}),"\n",(0,i.jsxs)(n.p,{children:["And include some text to the file with the ",(0,i.jsx)(n.code,{children:"echo"})," command as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'echo "some text here and there" > new_file.txt\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Now, jump to a different login node choosing from 1 to 4 except the one you are currently at, for example jumping to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"log-1"})})," with ssh as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-3 ~]$ ssh log-1\nLast login: Sat Jan  4 17:01:08 2025 from 10.27.28.114\n[pp2959@log-1 ~]$ \n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Notice"})})," the output, it shows your last login date and time to this particular login node"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Then list the contents of the file that you just created with the ",(0,i.jsx)(n.code,{children:"cat"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-1 ~]$ ls\nnew_file.txt\n[pp2959@log-1 ~]$ cat new_file.txt\nsome text here and there\n"})}),"\n",(0,i.jsx)(n.p,{children:"As you can see, it is the same file, same directory, the same filesystem for all users."}),"\n",(0,i.jsxs)(n.p,{children:["Regardless of whichever login node you may end up on, ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"all"})})," users have access to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"a common"})})," filesystem that is ",(0,i.jsx)(n.code,{children:"/home"}),". It is important to understand that users read and write files to the same filesystem while logged in from any of the 4 login nodes."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"REMEMBER"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/home"})," is your ",(0,i.jsx)(n.code,{children:"personal workspace"})," having a limited space"]}),"\n",(0,i.jsxs)(n.li,{children:["It is intended as a space for ",(0,i.jsx)(n.code,{children:"maintaining code bases only"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Now, ",(0,i.jsx)(n.code,{children:"exit"})," from your current ",(0,i.jsx)(n.code,{children:"shell instance"})," by running the command ",(0,i.jsx)(n.code,{children:"exit"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-1 ~]$ exit\nlogout\nConnection to log-1 closed.\n[pp2959@log-3 ~]$ \n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["IMPORTANT - ",(0,i.jsx)(n.em,{children:"Notice the output:"})]})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["The first line tells you that you have logged out of your current ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"bash shell"})})]}),"\n",(0,i.jsxs)(n.li,{children:["The second line tells you that the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"ssh connection"})})," to log-1 has been ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"closed"})})]}),"\n",(0,i.jsxs)(n.li,{children:["Now you are back to your ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"previous login"})})," node, in this example log-3, that is your previous ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"bash shell"})})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Why is this imporatant to understand"})})," ?\nBecause this will build your foundations in understanding the different kinds of nodes that exists and how you should use them for your projects"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"other-file-systems",children:"Other File Systems"}),"\n",(0,i.jsxs)(n.p,{children:["Similar to ",(0,i.jsx)(n.code,{children:"/home"}),", users have access to multiple filesystems that are :"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Filesystem"}),(0,i.jsx)(n.th,{children:"User(s) space"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Env Variable"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"/home"}),(0,i.jsxs)(n.td,{children:["/home/",(0,i.jsx)(n.strong,{children:"Net_ID"}),"/"]}),(0,i.jsx)(n.td,{children:"Workspace"}),(0,i.jsx)(n.td,{children:"$HOME"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"/scratch"}),(0,i.jsxs)(n.td,{children:["/scratch/",(0,i.jsx)(n.strong,{children:"Net_ID"}),"/"]}),(0,i.jsx)(n.td,{children:"General Storage"}),(0,i.jsx)(n.td,{children:"$SCRATCH"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"/archive"}),(0,i.jsxs)(n.td,{children:["/archive/",(0,i.jsx)(n.strong,{children:"Net_ID"}),"/"]}),(0,i.jsx)(n.td,{children:"Cold Storage"}),(0,i.jsx)(n.td,{children:"$ARCHIVE"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"You will find more details about these filesystems at [Greene Storage Types page](../storage_specs.mdx)."}),"\n",(0,i.jsxs)(n.p,{children:["You can jump to your ",(0,i.jsx)(n.code,{children:"/scratch"})," directory at ",(0,i.jsx)(n.code,{children:"/scratch/Net_ID/"})," with the ",(0,i.jsx)(n.code,{children:"cd"})," command as ",(0,i.jsx)(n.code,{children:"cd /scratch/Net_ID"}),", Or you could simple use the ",(0,i.jsx)(n.code,{children:"$SCRATCH"})," environment variable as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-1 ~]$ pwd\n/home/pp2959/\n[pp2959@log-1 ~]$ cd $SCRATCH\n[pp2959@log-1 ~]$ pwd\n/scratch/pp2959/\n[pp2959@log-1 ~]$\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Also you can view other user(s) ",(0,i.jsx)(n.code,{children:"/scratch"})," space on the cluster with ",(0,i.jsx)(n.code,{children:"ls /scratch"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"ls /scratch\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"/scratch"})," Space:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["This is a special type of filesystem called ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"General Parallel File System"})})," (GPFS) designed for ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"large storage"})})," and ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"high IO (Input/Output) throughput"})}),", supporting parallel reads and writes for the best performance !"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An appropriate data space where ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"parallel compute resources"})})," ingest their datasets (and even write back to it) during very large workloads, such as distributed Deep Learning at scale"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"All nodes"})})," in the cluster, that includes login, compute, and data transfer nodes share this filesystem"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["This is a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"temporary"})})," space for loading and unloading large datasets, that is files are ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"purged"})})," with a prior notice, to maintain performance, hence the name ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Scratch"})})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"/archive"})," Space:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"archival space"})})," for your projects, a cold storage option where you stash your work long term"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Cannot be accessed by compute resources"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Never purged"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"running-programs-on-a-login-node",children:["Running programs on a ",(0,i.jsx)(n.code,{children:"login"})," node"]}),"\n",(0,i.jsx)(n.p,{children:"Login nodes. As the name implies are used for interacting with the cluster only. They are not equiped with compute heavy hardware or much memory, and hence you may run simple programs ( that can lag a bit ) but not compute heavy workloads."}),"\n",(0,i.jsxs)(n.p,{children:["Let us take a look at an example of running a simple lua script on this type of node, create a lua script file named ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"hello.lua"})})," using ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"vim"})}),", a powerful terminal based text editor:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"[pp2959@log-3 ~]$ vim hello.lua\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Running the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"vim"})})," command followed by a ",(0,i.jsx)(n.code,{children:"file_name"})," as an argument creates a new ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"text file"})})," and opens the editor within the terminal"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Press ",(0,i.jsx)(n.code,{children:"i"})," once open, this will switch the editor to ",(0,i.jsx)(n.code,{children:"insert mode"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["In ",(0,i.jsx)(n.code,{children:"insert mode"})," you can start typing to file (it's a temporary buffer) like anyother text editor"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Copy the below lua code and paste it in the editor with ",(0,i.jsx)(n.code,{children:"Ctrl-v"})," ( on windows ) or ",(0,i.jsx)(n.code,{children:"Cmd-v"})," on ( MacOS ):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'os.execute("hostname")\nprint("hello, world")\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Now, Press ",(0,i.jsx)(n.code,{children:"Esc"})," key to escape from ",(0,i.jsx)(n.code,{children:"insert mode"})]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Notice"})})," how you cannot type anything else after escaping from insert mode, however you can go back to insert mode by clicking on ",(0,i.jsx)(n.code,{children:"i"})," ( short for insert mode )"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Then, Press colon ",(0,i.jsx)(n.code,{children:":"})," (don't press anything else after), ",(0,i.jsxs)(n.em,{children:["you should notice the ",(0,i.jsx)(n.code,{children:":"})," appear near ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"bottom left"})})," corner of the editor"]})]}),"\n",(0,i.jsxs)(n.li,{children:["This is where you type your ",(0,i.jsx)(n.code,{children:"editor commands"})," like save file, discard changes, open a new file, etc"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Continue typing"})})," ",(0,i.jsx)(n.code,{children:"wq"}),", as in the editor command should look like ",(0,i.jsx)(n.code,{children:":wq"})]}),"\n",(0,i.jsxs)(n.li,{children:["Press ",(0,i.jsx)(n.code,{children:"Enter"})," key to execute this command"]}),"\n",(0,i.jsx)(n.li,{children:"This saves the file to your current directory and exits the editor, you should be back on your console now"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Again the ",(0,i.jsx)(n.code,{children:":"})," here is to start ",(0,i.jsx)(n.em,{children:"typing"})," an editor command, followed by the command(s) themselves. Like ",(0,i.jsx)(n.code,{children:"w"})," is to write changes to the file ",(0,i.jsx)(n.code,{children:"hello.lua"})," followed by ",(0,i.jsx)(n.code,{children:"q"})," to quite from the editor."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"In case"})})," if you would like to ",(0,i.jsx)(n.strong,{children:"force quite"})," and start again, then press ",(0,i.jsx)(n.code,{children:"Esc"})," first to exit from ",(0,i.jsx)(n.code,{children:"insert mode"}),", or anyother mode you may have accidentally enabled. This ensures you are completely exited from any modes, then execute the ",(0,i.jsx)(n.code,{children:"editor commands"})," - ",(0,i.jsx)(n.code,{children:":q!"})," to force quite discrading changes, here ",(0,i.jsx)(n.code,{children:"q"})," for quite and ",(0,i.jsx)(n.code,{children:"!"})," for ",(0,i.jsx)(n.em,{children:"force"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Once done, check the contents of your file with the ",(0,i.jsx)(n.code,{children:"cat"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:'[pp2959@log-3 ~]$ ls\nnew_file.txt hello.lua\n[pp2959@log-3 ~]$ cat hello.lua\nos.execute("hostname")\nprint("hello, world")\n[pp2959@log-3 ~]$\n'})})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},2168:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(758);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);